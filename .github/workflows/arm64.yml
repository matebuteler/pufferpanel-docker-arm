name: arm64 Docker image

on:
  workflow_dispatch:
  schedule:
    # See https://crontab.guru/monthly
    - cron: 0 0 1 * *
    
    
permissions:
  packages: write

env:
  IMAGE_NAME: pufferpanel
  IMAGE_REGISTRY: ghcr.io/oskardotglobal
  REGISTRY_USER: oskardotglobal
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    
jobs:
  base:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
    
      - name: Clone PufferPanel src
        uses: actions/checkout@v2
        with:
          repository: PufferPanel/PufferPanel
          path: arm64/src

      - name: Build base
        id: build_image_base
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Dockerfile

      - name: Push base to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_base
        with:
          image: ${{ steps.build_image_base.outputs.image }}
          tags: ${{ steps.build_image_base.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

  
  java:
    runs-on: ubuntu-22.04
    needs: base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      
      - name: Build java
        id: build_image_java
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64-java
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Java.dockerfile
          
      - name: Push java to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_java
        with:
          image: ${{ steps.build_image_java.outputs.image }}
          tags: ${{ steps.build_image_java.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

    
  java8:
    runs-on: ubuntu-22.04
    needs: base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
    
      - name: Build java8
        id: build_image_java8
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64-java8
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Java8.dockerfile

      - name: Push java8 to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_java8
        with:
          image: ${{ steps.build_image_java8.outputs.image }}
          tags: ${{ steps.build_image_java8.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

    
  java16:
    runs-on: ubuntu-22.04
    needs: base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
    
      - name: Build java16
        id: build_image_java16
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64-java16
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Java16.dockerfile


      - name: Push java16 to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_java16
        with:
          image: ${{ steps.build_image_java16.outputs.image }}
          tags: ${{ steps.build_image_java16.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

    
  java17:
    runs-on: ubuntu-22.04
    needs: base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
          
      - name: Build java17
        id: build_image_java17
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64-java17
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Java17.dockerfile

      - name: Push java17 to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_java17
        with:
          image: ${{ steps.build_image_java17.outputs.image }}
          tags: ${{ steps.build_image_java17.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

    
  node:
    runs-on: ubuntu-22.04
    needs: base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
          
      - name: Build nodejs
        id: build_image_nodejs
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: arm64-nodejs
          context: ./arm64
          platforms: linux/arm64
          containerfiles: |
            arm64/Nodejs.dockerfile

      - name: Push nodejs to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_image_nodejs
        with:
          image: ${{ steps.build_image_nodejs.outputs.image }}
          tags: ${{ steps.build_image_nodejs.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
    
